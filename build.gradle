plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/release' }
}

task buildZip(type: Zip) {
	dependsOn build
	from(layout.buildDirectory){
		include("libs/*SNAPSHOT.jar")
	}
	eachFile {
		path = name
	}
	from "scf_bootstrap"
	from "application.properties"

	includeEmptyDirs = false
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.tencentcloudapi:tencentcloud-sdk-java:3.1.462'

}

tasks.named('test') {
	useJUnitPlatform()
}


task generateClassList(type: JavaExec, dependsOn: jar) {
    main 'com.example.tencent_scf.DemoApplication'

    classpath = files(
            sourceSets.main.runtimeClasspath,
            buildDir.toPath()
                .resolve("libs/*SNAPSHOT.jar").toFile()
    )
    jvmArgs "-Xshare:off", "-XX:+UseAppCDS", "-XX:DumpLoadedClassList=classes.lst"
}

task generateAppCDSArchive(type: JavaExec, dependsOn: compileJava) {
    main 'com.example.tencent_scf.DemoApplication'

    classpath = files(
            sourceSets.main.runtimeClasspath,
            buildDir.toPath()
                .resolve("libs/*SNAPSHOT.jar").toFile()
    )
    jvmArgs "-Xshare:dump", "-XX:+UseAppCDS", "-XX:SharedClassListFile=classes.lst",
            "-XX:SharedArchiveFile=classes.jsa", "-Xlog:class+path=info"
}