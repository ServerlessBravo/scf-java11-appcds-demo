plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/release' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.tencentcloudapi:tencentcloud-sdk-java:3.1.462'

}

tasks.named('test') {
	useJUnitPlatform()
}

Closure cl = {  buildDirectory ->  
		fileTree(dir: buildDirectory).matching {
			include "libs/*-SNAPSHOT.jar"
		}
	}

task generateClassList(type: JavaExec) {
	doFirst {
		delete("${projectDir}/classes.lst")
	}

	main = "-jar"
	jvmArgs = [ 
		"-Xshare:off", 
		"-XX:+UseAppCDS", 
		"-XX:DumpLoadedClassList=classes.lst"
	]

	args = [ cl(buildDir).getFiles().first() ]
}

task generateAppCDSArchive(type: JavaExec) {
	doFirst {
		delete("${projectDir}/classes.jsa")
	}

	main = "-jar"
    jvmArgs "-Xshare:dump", "-XX:+UseAppCDS", "-XX:SharedClassListFile=classes.lst",
            "-XX:SharedArchiveFile=classes.jsa", "-Xlog:class+load=info", "-Xlog:class+path=info"

	args = [ cl(buildDir).getFiles().first() ]
}

task RunApplicationWithAppCDS(type: JavaExec) {
	main = "-jar"
	jvmArgs "-Xshare:on", "-XX:+UseAppCDS", "-XX:SharedArchiveFile=classes.jsa"
	args = [ cl(buildDir).getFiles().first() ]
}

task buildZip(type: Zip) {
	from(layout.buildDirectory){
		include("libs/*SNAPSHOT.jar")
	}
	eachFile {
		path = name
	}
	from "scf_bootstrap"
	from "application.properties"
	from "classes.jsa"
	from "classes.lst"

	includeEmptyDirs = false
}